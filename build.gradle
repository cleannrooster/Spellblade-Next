plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()

        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.19.2+build.3:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    if (project == project(":fabric")) {
    archivesBaseName = rootProject.archives_base_name+"-fabric"
    }
    else if (project == project(":forge")){
        archivesBaseName = rootProject.archives_base_name+"-forge"
    }
    else{
        archivesBaseName = rootProject.archives_base_name

    }
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        mavenLocal()
        maven {
            url "https://www.cursemaven.com"
            maven {
                url 'https://server.bbkr.space/artifactory/libs-release/'
            }
        }
        maven { url 'https://maven.shedaniel.me/' }
        maven { url 'https://maven.kosmx.dev/' }
        maven { url 'https://jitpack.io' }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }
        maven {
            name = "NerdHub"
            url = "https://maven.abusedmaster.xyz/"
        }
        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/"
        }
        maven {
            name = "Ladysnake Libs"
            url = "https://ladysnake.jfrog.io/artifactory/mods"
        }
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }
    dependencies {
        // Specify the version of Minecraft to use. If this is any group other than 'net.minecraft', it is assumed
        // that the dep is a ForgeGradle 'patcher' dependency, and its patches will be applied.
        // The userdev artifact is a special name and will get all sorts of transformations applied to it.


        // compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api") // Adds JEI API as a compile dependency
        // runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}") // Adds the full JEI mod as a runtime dependency
        // implementation fg.deobf("com.tterrag.registrate:Registrate:MC${mc_version}-${registrate_version}") // Adds registrate as a dependency

        // Examples using mod jars from ./libs
        // implementation fg.deobf("blank:coolmod-${mc_version}:${coolmod_version}")

        // For more info...
        // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
        // http://www.gradle.org/docs/current/userguide/dependency_management.html

    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
